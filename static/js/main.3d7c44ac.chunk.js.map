{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","itemWidth","frameSize","step","animationDuration","infinite","imgPosition","setImgPosition","useState","lastImgPosition","length","isDisabledNext","isDisabledPrev","carouselStyle","width","concat","carouselImageStyle","transform","transition","_jsxs","className","style","children","_jsx","map","image","index","src","alt","onClick","handlePrev","prev","type","disabled","handleNext","App","React","Component","constructor","arguments","state","handleInputChange","event","name","value","target","this","setState","prevState","render","action","method","htmlFor","id","min","onChange","max","checked","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d7c44ac.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [imgPosition, setImgPosition] = useState(0);\n\n  const lastImgPosition = images.length - frameSize;\n  const isDisabledNext = imgPosition === lastImgPosition && !infinite;\n  const isDisabledPrev = imgPosition === 0 && !infinite;\n\n  const carouselStyle = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const carouselImageStyle = {\n    transform: `translateX(${-(imgPosition * itemWidth)}px)`,\n    transition: `transform ${animationDuration}ms ease`,\n  };\n\n  const handlePrev = () => {\n    if (imgPosition > 0) {\n      setImgPosition(prev => (\n        prev - step >= 0\n          ? prev - step\n          : 0\n      ));\n    } else {\n      setImgPosition(lastImgPosition);\n    }\n  };\n\n  const handleNext = () => {\n    if (imgPosition < lastImgPosition) {\n      setImgPosition(prev => (\n        prev + step <= lastImgPosition\n          ? prev + step\n          : lastImgPosition\n      ));\n    } else {\n      setImgPosition(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselStyle}>\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={carouselImageStyle}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          onClick={handlePrev}\n          type=\"button\"\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          onClick={handleNext}\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (name === 'infinite') {\n      this.setState((prevState) => ({ infinite: !prevState.infinite }));\n\n      return;\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form className=\"form\" action=\"#\" method=\"post\">\n          <label className=\"form__label\" htmlFor=\"itemId\">\n            Item Width:&nbsp;\n\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              min={130}\n              step={10}\n              value={itemWidth}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"frameId\">\n            Frame Size:&nbsp;\n\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              min={1}\n              max={images.length}\n              value={frameSize}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"stepId\">\n            Step:&nbsp;\n\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              min={1}\n              value={step}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"animationDurationId\">\n            Animation Duration:&nbsp;\n\n            <input\n              className=\"form__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              min={500}\n              max={10000}\n              step={500}\n              value={animationDuration}\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <label className=\"form__label\" htmlFor=\"infiniteId\">\n            Infinite:&nbsp;\n\n            <input\n              className=\"form__input\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infiniteId\"\n              checked={infinite}\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}